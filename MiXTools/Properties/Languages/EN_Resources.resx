<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="APPLICATION_SETTINGS" xml:space="preserve">
    <value>Application settings</value>
  </data>
  <data name="APP_IS_ALREADY_RUNNING" xml:space="preserve">
    <value>Can't open application, beacuse it is already running in another process!</value>
  </data>
  <data name="ASSISTANT_BUTTON_URL_OR_FILE" xml:space="preserve">
    <value>URL / File for assistant button</value>
  </data>
  <data name="CANNOT_ACCESS_MI_SCREEN_SAVER" xml:space="preserve">
    <value>Can't access Mi Screen Saver, because it doesn't exist or path of Mi OSD Utility is not configured!</value>
  </data>
  <data name="CHANGE" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="DARK_MODE" xml:space="preserve">
    <value>Dark mode</value>
  </data>
  <data name="DEV_SETTINGS" xml:space="preserve">
    <value>Developer settings</value>
  </data>
  <data name="EN" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="ERROR" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FOLDER_LOCATION" xml:space="preserve">
    <value>Folder location</value>
  </data>
  <data name="HU" xml:space="preserve">
    <value>Hungarian</value>
  </data>
  <data name="INFO" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="LANGUAGE" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LAUNCH_MODE" xml:space="preserve">
    <value>Launch mode</value>
  </data>
  <data name="LOG_CONSOLE" xml:space="preserve">
    <value>Log console</value>
  </data>
  <data name="LOG_CONSOLE_ON_STARTUP" xml:space="preserve">
    <value>Open log console on startup</value>
  </data>
  <data name="MIXTOOLS" xml:space="preserve">
    <value>MiXTools</value>
  </data>
  <data name="OPEN" xml:space="preserve">
    <value>open</value>
  </data>
  <data name="OPEN_LOG_CONSOLE" xml:space="preserve">
    <value>Open log console</value>
  </data>
  <data name="OSDLAUNCHER_EXE_NOT_FOUND" xml:space="preserve">
    <value>OSDLauncher.exe is not found under the selected folder!</value>
  </data>
  <data name="OSD_PATH_IS_NOT_SET" xml:space="preserve">
    <value>Path for Mi OSD Utility is not configured!</value>
  </data>
  <data name="OSD_SETTINGS" xml:space="preserve">
    <value>Mi OSD Utility settings</value>
  </data>
  <data name="RESET_APPDATA" xml:space="preserve">
    <value>Reset application data</value>
  </data>
  <data name="RU" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="RUNAS" xml:space="preserve">
    <value>run as admin</value>
  </data>
  <data name="SELECT_LAUNCH_MODE" xml:space="preserve">
    <value>Would you like to launch the selected program as an admin when you press the assistant button?</value>
  </data>
  <data name="SELECT_LAUNCH_MODE_TITLE" xml:space="preserve">
    <value>Launch mode</value>
  </data>
  <data name="SETTINGS" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SHOW_MI_SCREEN_SAVER" xml:space="preserve">
    <value>Show Mi Screen Saver</value>
  </data>
  <data name="UAFL_DOWNLOAD_FAILED" xml:space="preserve">
    <value>The application couldn't download URLAndFilelauncher executable from GitHub repository. Please check if you have internet connection to download the required file and restart the application!</value>
  </data>
  <data name="UAFL_FILE_IS_MISSING" xml:space="preserve">
    <value>uafl.exe is missing from the application's directory!</value>
  </data>
  <data name="UAFL_MODE" xml:space="preserve">
    <value>UAFL mode</value>
  </data>
  <data name="UAFL_MODE_CANNOT_BE_CHANGED" xml:space="preserve">
    <value>Only .lnk and .exe files can be run as an admin!</value>
  </data>
  <data name="UNAUTHORIZED_ACCESS" xml:space="preserve">
    <value>Application is required to be run as an admin.</value>
  </data>
  <data name="VERSION" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="VISIT_GITHUB" xml:space="preserve">
    <value>Visit Github</value>
  </data>
</root>